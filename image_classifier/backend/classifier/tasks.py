# image_classifier/backend/classifier/tasks.py

import os
import tempfile
import boto3
import shutil
from celery import shared_task

from .classifier import maybe_update_model
from .train_model import retrain_if_needed  # –¢–µ–ø–µ—Ä—å –æ–¥–Ω–∞ –≥–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
# –Ω–µ –Ω—É–∂–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å maybe_update_model –æ—Ç–¥–µ–ª—å–Ω–æ

AWS_ACCESS_KEY_ID = os.getenv('AWS_ACCESS_KEY_ID')
AWS_SECRET_ACCESS_KEY = os.getenv('AWS_SECRET_ACCESS_KEY')
BUCKET_NAME = 'pavilionphotos'
ENDPOINT_URL = 'https://storage.yandexcloud.net'

@shared_task
def retrain_model_task():
    print("üöÄ –ó–∞–ø—É—â–µ–Ω–∞ –∑–∞–¥–∞—á–∞ –ø–µ—Ä–µ–æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–∏!")

    with tempfile.TemporaryDirectory() as tmp_dir:
        print(f"üìÇ –í—Ä–µ–º–µ–Ω–Ω–∞—è –ø–∞–ø–∫–∞ –¥–ª—è –¥–∞—Ç–∞—Å–µ—Ç–∞: {tmp_dir}")
        # —Å–∫–∞—á–∏–≤–∞–µ–º –≤—Å–µ —Å—ã—Ä—ã–µ —Ñ–æ—Ç–æ –∏–∑ S3 –≤ tmp_dir/dataset/raw
        dataset_raw = os.path.join(tmp_dir, 'dataset/raw')
        os.makedirs(dataset_raw, exist_ok=True)

        s3 = boto3.client(
            's3',
            endpoint_url=ENDPOINT_URL,
            aws_access_key_id=AWS_ACCESS_KEY_ID,
            aws_secret_access_key=AWS_SECRET_ACCESS_KEY
        )

        prefixes = [
            "dataset/raw/graffiti/",
            "dataset/raw/no_repair/",
            "dataset/raw/scheduled_repair/",
            "dataset/raw/urgent_repair/"
        ]
        for prefix in prefixes:
            resp = s3.list_objects_v2(Bucket=BUCKET_NAME, Prefix=prefix)
            for obj in resp.get('Contents', []):
                if obj['Key'].endswith('/'):
                    continue
                local_path = os.path.join(tmp_dir, obj['Key'])
                os.makedirs(os.path.dirname(local_path), exist_ok=True)
                s3.download_file(BUCKET_NAME, obj['Key'], local_path)

        print("‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã –∏–∑ S3 —Å–∫–∞—á–∞–Ω—ã")

        # –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º cwd, —á—Ç–æ–±—ã retrain_if_needed() –ø–∏—Å–∞–ª –≤ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø–∞–ø–∫–∏
        cwd = os.getcwd()
        os.chdir(tmp_dir)
        try:
            retrain_if_needed()
        finally:
            os.chdir(cwd)

    # –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –¥–æ–æ–±—É—á–µ–Ω–∏—è –ø—ã—Ç–∞–µ–º—Å—è –æ–±–Ω–æ–≤–∏—Ç—å –º–æ–¥–µ–ª—å –≤ –ø–∞–º—è—Ç–∏ Django
    maybe_update_model()

    print("üéâ –ó–∞–¥–∞—á–∞ –ø–µ—Ä–µ–æ–±—É—á–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
